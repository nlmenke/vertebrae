version: '3.7'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  adminer:
    driver: local
  mysql:
    driver: local
  redis:
    driver: local

services:

  # Adminer
  ## Database management in a single PHP file.
  adminer:
    container_name: ADMINER
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  # MySQL
  ## MySQL is a widely used, open source relational database management system
  ## (RDBMS).
  mysql:
    container_name: ${DB_HOST}
    build:
      context: ./.docker/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ./.docker/data/mysql:/var/lib/mysql
      - ./.docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '${DB_PORT}:3306'
    networks:
      - backend

  # NGINX
  ## Nginx is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3,
  ## and IMAP protocols as well as a load balancer, HTTP cache, and a web
  ## server.
  nginx:
    container_name: NGINX
    depends_on:
      - php-fpm
    build:
      context: ./.docker/nginx
      args:
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/var/www:cached
      - ./.docker/logs/nginx/:/var/log/nginx
      - ./.docker/nginx/sites/:/etc/nginx/sites-available
      - ./.docker/nginx/ssl/:/etc/nginx/ssl
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    networks:
      - frontend
      - backend

  # PHP-FPM
  ## A simple and robust FastCGI Process Manager for PHP.
  php-fpm:
    container_name: PHP-FPM
    depends_on:
      - workspace
    build:
      context: ./.docker/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2375
    volumes:
      - ./.docker/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./:/var/www:cached
    networks:
      - backend
    extra_hosts:
      - 'dockerhost:${DOCKER_HOST_IP}'
    expose:
      - '9000'
    links:
      - docker-in-docker

  # Redis
  ## Redis is an open source key-value store that functions as a data structure
  ## server.
  redis:
    container_name: ${REDIS_HOST}
    build:
      context: ./.docker/redis
      args:
        - REDIS_VERSION=${REDIS_VERSION}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./.docker/data/redis:/data
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - backend

  # Workspace
  ## Your workspace is where most of your interactions with the server will
  ## take place. Artisan commands, composer, and npm should be run from within
  ## this container.
  workspace:
    container_name: WORKSPACE
    build:
      context: ./.docker/workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PGID=${WORKSPACE_PGID}
        - PUID=${WORKSPACE_PUID}
        - TZ=${TIMEZONE}
        - NODE_VERSION=${NODE_VERSION}
        - INSTALL_YARN=${INSTALL_YARN}
        - YARN_VERSION=${YARN_VERSION}
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2375
    volumes:
      - ./:/var/www:cached
    ports:
      - '${WORKSPACE_SSH_PORT}:22'
    networks:
      - frontend
      - backend
    extra_hosts:
      - 'dockerhost:${DOCKER_HOST_IP}'
    tty: true
    links:
      - docker-in-docker

  # Docker-in-Docker
  ## Docker running within the Docker container.
  docker-in-docker:
    container_name: DOCKER-IN-DOCKER
    image: docker:dind
    volumes:
      - ./:/var/www
    expose:
      - 2375
    networks:
      - backend
    privileged: true
